{
  "$schema": "https://turborepo.com/schema.json",
  "ui": "tui",
  "envMode": "strict",
  "globalDependencies": [
    ".env",
    ".env.*",
    "tsconfig.json",
    "tsconfig.base.json"
  ],
  "tasks": {
    "build": {
      "dependsOn": ["^build"],
      "inputs": ["$TURBO_DEFAULT$", ".env"],
      "outputs": [".next/**", "!.next/cache/**", "dist/**", "build/**"],
      "env": [
        "NODE_ENV",
        "PORT",
        "POSTGRES_DB",
        "POSTGRES_USER",
        "DATABASE_URI",
        "POSTGRES_PASSWORD",
        "POSTGRES_HOST",
        "POSTGRES_PORT",
        "SUPABASE_URL",
        "SUPABASE_SERVICE_ROLE_KEY",
        "SUPABASE_JWT_SECRET",
        "BASE_URL",
        "SERVICE_NAME",
        "LOGGER_SILENT",
        "LOG_LEVEL"
      ]
    },
    "dev": {
      "cache": false,
      "persistent": true
    },
    "dev:backend": {
      "inputs": ["$TURBO_DEFAULT$", ".env"],
      "persistent": true,
      "env": [
        "NODE_ENV",
        "PORT",
        "POSTGRES_DB",
        "POSTGRES_USER",
        "DATABASE_URI",
        "POSTGRES_PASSWORD",
        "POSTGRES_HOST",
        "POSTGRES_PORT",
        "SUPABASE_URL",
        "SUPABASE_SERVICE_ROLE_KEY",
        "SUPABASE_JWT_SECRET",
        "BASE_URL",
        "SERVICE_NAME",
        "LOGGER_SILENT",
        "LOG_LEVEL"
      ]
    },
    "start:backend": {
      "cache": false,
      "persistent": true,
      "inputs": ["$TURBO_DEFAULT$", ".env"],
      "env": [
        "NODE_ENV",
        "PORT",
        "POSTGRES_DB",
        "POSTGRES_USER",
        "DATABASE_URI",
        "POSTGRES_PASSWORD",
        "POSTGRES_HOST",
        "POSTGRES_PORT",
        "SUPABASE_URL",
        "SUPABASE_SERVICE_ROLE_KEY",
        "SUPABASE_JWT_SECRET",
        "BASE_URL",
        "SERVICE_NAME",
        "LOGGER_SILENT",
        "LOG_LEVEL"
      ]
    },
    "docker:up": {
      "cache": false,
      "persistent": true
    },
    "docker:down": {
      "cache": false
    },
    "lint": {
      "dependsOn": ["^build"],
      "outputs": []
    },
    "type-check": {
      "dependsOn": ["^build"],
      "outputs": []
    },
    "test": {
      "dependsOn": ["^build"],
      "outputs": ["coverage/**"]
    },
    "clean": {
      "cache": false
    },
    "format": {
      "cache": false
    },
    "format:check": {
      "cache": false
    }
  }
}
